apiVersion: apps/v1
kind: Deployment
metadata:
  name: canvas-app
  labels:
    app: canvas-app
    component: backend
    tier: application
spec:
  replicas: 3
  selector:
    matchLabels:
      app: canvas-app
  template:
    metadata:
      labels:
        app: canvas-app
        component: backend
        tier: application
    spec:
      containers:
      - name: canvas-app
        image: canvas-orchestration:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: canvas-secrets
              key: mongodb-uri
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: canvas-secrets
              key: redis-url
        - name: OPENSEARCH_URL
          valueFrom:
            secretKeyRef:
              name: canvas-secrets
              key: opensearch-url
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: canvas-secrets
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: canvas-secrets
              key: aws-secret-access-key
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: canvas-config
              key: aws-region
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: canvas-secrets
              key: jwt-secret
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: logs
          mountPath: /app/logs
        - name: plugins-external
          mountPath: /app/plugins-external
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: canvas-uploads-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: canvas-logs-pvc
      - name: plugins-external
        persistentVolumeClaim:
          claimName: canvas-plugins-pvc
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - canvas-app
              topologyKey: kubernetes.io/hostname